<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.xau.info.mapper.TeacherMapper">
    <resultMap id="BaseResultMap" type="edu.xau.info.bean.Teacher">
        <result column="userid" jdbcType="INTEGER" property="userid"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="sex" jdbcType="VARCHAR" property="sex"/>
        <result column="teacherno" jdbcType="CHAR" property="teacherno"/>
        <result column="Invitecode" jdbcType="VARCHAR" property="invitecode"/>
        <result column="flag" jdbcType="INTEGER" property="flag"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    userid, name, sex, teacherno, Invitecode, flag
  </sql>
    <select id="selectByExample" parameterType="edu.xau.info.bean.TeacherExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from teacher
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <delete id="deleteByExample" parameterType="edu.xau.info.bean.TeacherExample">
        delete from teacher
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>

    <select id="findStuCountDto" resultType="edu.xau.info.Vo.EchartSmallVo">
select teacher.`name` as xdata , count(student.stuid) as y from teacher left join student on teacher.userid = student.teaid and student.flag is null
group by teaid;
    </select>

    <select id="findTaskCountDto" resultType="edu.xau.info.Vo.EchartSmallVo">
select teacher.`name` as xdata, count(task.taskid) as y from teacher left join task on teacher.userid = task.teaid group by teaid;
    </select>

    <select id="findAllNos" resultType="java.lang.String">
            select teacherno from teacher where flag = 1;
    </select>

    <insert id="insert" parameterType="edu.xau.info.bean.Teacher">
    insert into teacher (userid, name, sex, 
      teacherno, Invitecode, flag
      )
    values (#{userid,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, 
      #{teacherno,jdbcType=CHAR}, #{invitecode,jdbcType=VARCHAR}, #{flag,jdbcType=INTEGER}
      )
  </insert>

    <select id="findTaskView" resultType="edu.xau.info.Vo.EchartTaskVo">
SELECT
	min(stu_task.score ) as `min`,
	AVG(stu_task.score ) as y,
	max(stu_task.score ) as `max`,
		task.titile as `xdata`
FROM
	stu_task,task
where stu_task.taskid in(
select taskid from task where teaid = #{teaid}
) and task.taskid = stu_task.taskid
group by stu_task.taskid
order by stu_task.taskid desc
limit 5;
  </select>

    <insert id="insertSelective" parameterType="edu.xau.info.bean.Teacher">
        insert into teacher
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userid != null">
                userid,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="sex != null">
                sex,
            </if>
            <if test="teacherno != null">
                teacherno,
            </if>
            <if test="invitecode != null">
                Invitecode,
            </if>
            <if test="flag != null">
                flag,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userid != null">
                #{userid,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                #{sex,jdbcType=VARCHAR},
            </if>
            <if test="teacherno != null">
                #{teacherno,jdbcType=CHAR},
            </if>
            <if test="invitecode != null">
                #{invitecode,jdbcType=VARCHAR},
            </if>
            <if test="flag != null">
                #{flag,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="edu.xau.info.bean.TeacherExample" resultType="java.lang.Long">
        select count(*) from teacher
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update teacher
        <set>
            <if test="record.userid != null">
                userid = #{record.userid,jdbcType=INTEGER},
            </if>
            <if test="record.name != null">
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.sex != null">
                sex = #{record.sex,jdbcType=VARCHAR},
            </if>
            <if test="record.teacherno != null">
                teacherno = #{record.teacherno,jdbcType=CHAR},
            </if>
            <if test="record.invitecode != null">
                Invitecode = #{record.invitecode,jdbcType=VARCHAR},
            </if>
            <if test="record.flag != null">
                flag = #{record.flag,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update teacher
        set userid = #{record.userid,jdbcType=INTEGER},
        name = #{record.name,jdbcType=VARCHAR},
        sex = #{record.sex,jdbcType=VARCHAR},
        teacherno = #{record.teacherno,jdbcType=CHAR},
        Invitecode = #{record.invitecode,jdbcType=VARCHAR},
        flag = #{record.flag,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
</mapper>